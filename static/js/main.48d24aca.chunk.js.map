{"version":3,"sources":["images/avatar.png","Components/base/js/index.js","Components/base/js/propTypes.js","Components/button/js/index.js","Components/button/js/propTypes.js","Components/title/js/index.js","Components/title/js/propTypes.js","Sections/base/js/index.js","Sections/base/js/propTypes.js","Sections/header/js/index.js","Sections/utils/globalProptypes.js","Components/navigation/js/index.js","Components/navigation/js/propTypes.js","Components/skills-bars/js/index.js","Components/skills-bars/js/propTypes.js","Components/image/js/index.js","Components/image/js/propTypes.js","Components/text/js/index.js","Components/text/js/propTypes.js","Components/container/js/index.js","Components/container/js/propTypes.js","Components/text-icon/js/index.js","Components/text-icon/js/propTypes.js","Components/separator/js/index.js","Components/separator/js/propTypes.js","Sections/about-me/js/index.js","Components/cards/js/index.js","Components/cards/js/propTypes.js","Components/rss-feed/js/index.js","Components/rss-feed/js/propTypes.js","Sections/flux-rss/js/index.js","Sections/contact/js/index.js","Sections/footer/js/index.js","Utils/navigationLinks.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","BaseComponent","PropTypes","string","oneOfType","arrayOf","node","isRequired","flexDisplay","children","className","classes","Button","text","link","bHref","href","bSimple","Title","bool","title","underlined","tag","underline","CustomTitle","BaseStructure","marker","sectionClasses","CustomTag","id","Header","Navigation","shape","navigationLinks","useState","isFixed","setIsFixed","undefined","currentSection","setCurrentSection","navRef","useRef","useEffect","navTop","current","offsetTop","root","document","querySelector","classList","structures","querySelectorAll","window","addEventListener","wTop","pageYOffset","forEach","section","add","remove","links","map","index","key","ref","SkillBars","Object","skills","isVisible","barClass","setBarClass","skill","type","style","width","level","Image","props","alt","Text","textKey","txt","Texts","target","rel","Container","withTransition","typeTransition","containerClass","setContainerClass","display","TextIcon","icon","Separator","number","Skills","About","partialVisibility","once","src","Avatar","faNodeJs","Cards","object","card","date","Date","isoDate","toDateString","creator","RssFeed","url","maxDisplayed","feedList","setFeedList","parser","RSSParser","parseURL","then","fd","items","splice","data","feed","item","catch","err","keys","length","FluxRss","forceRenderTabPanel","defaultIndex","Contact","buttonRef","titleRef","class","faLinkedinIn","faGithub","faGoogle","faChevronCircleRight","onClick","toggle","faArrowAltCircleUp","Footer","App","Fragment","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.48d24aca.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.3bfe990d.png\";","import React from \"react\";\n\nimport { propTypes } from './propTypes';\n\nimport '../styles/index.scss';\n\nexport const BaseComponent = ({ flexDisplay, children, className }) => {\n    const classes = `component${ flexDisplay ? ` ${ flexDisplay }` : '' }${ className ? ' ' + className : '' }`;\n\n    return (\n        <div className={ classes }>\n            { children }\n        </div>\n    )\n};\n\nBaseComponent.propTypes = propTypes;\n","import PropTypes from 'prop-types';\n\nexport const propTypes = {\n    flexDisplay: PropTypes.string,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired\n};","import React from \"react\";\n\nimport { BaseComponent } from \"../../base/js\";\n\nimport { propTypes } from \"./propTypes\";\n\nimport '../styles/index.scss';\n\nexport const Button = ({ text, flexDisplay, link }) => {\n    const bHref = <a href={ link }>\n        <div className=\"cmp-button\">\n            <span>{ text }</span>\n        </div>\n    </a>;\n\n    const bSimple = <div className=\"cmp-button\">\n        <span>{ text }</span>\n    </div>;\n\n    return (\n        <BaseComponent flexDisplay={ flexDisplay }>\n            { link ? bHref : bSimple }\n        </BaseComponent>\n    )\n};\n\nButton.propTypes = propTypes;","import PropTypes from 'prop-types';\n\nexport const propTypes = {\n    text: PropTypes.string.isRequired,\n};","import React from \"react\";\n\nimport { BaseComponent } from \"../../base/js\";\n\nimport { propTypes } from \"./propTypes\"\n\nimport '../styles/index.scss';\n\nexport const Title = ({ title, flexDisplay, underlined, tag, className }) => {\n    const underline = underlined ? ' underlined' : '';\n    const CustomTitle = tag ? `h${ tag }` : 'h1';\n\n    return (\n        <BaseComponent flexDisplay={ flexDisplay } className={ className }>\n            <CustomTitle className={ `cmp-title${ underline }` }>\n                { title }\n            </CustomTitle>\n            { underlined && <div className='underline'></div> }\n        </BaseComponent>\n    )\n};\n\nTitle.propTypes = propTypes;","import PropTypes from 'prop-types';\n\nexport const propTypes = {\n    title: PropTypes.string.isRequired,\n    underlined: PropTypes.bool\n};","import React from \"react\";\n\nimport { propTypes } from \"./propTypes\";\n\nimport '../styles/index.scss';\n\nexport const BaseStructure = ({ marker, flexDisplay, tag, children }) => {\n    const classes = `structure${ marker ? `-${ marker }` : '' } container-fluid`;\n    const sectionClasses = `structure${ marker ? `-${ marker }` : '' }__wrapper flex-row${ flexDisplay ? ' ' + flexDisplay : '' }`;\n    const CustomTag = tag;\n\n    return (\n            <CustomTag id={ marker } className={ classes }>\n                <section className={ sectionClasses }>\n                    { children }\n                </section>\n            </CustomTag>\n    )\n};\n\nBaseStructure.propTypes = propTypes;","import PropTypes from 'prop-types';\n\nexport const propTypes = {\n    marker: PropTypes.string.isRequired,\n    tag: PropTypes.string.isRequired,\n    flexDisplay: PropTypes.string,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired\n};","import React from \"react\";\n\nimport { Button } from \"../../../Components/button/js\";\nimport { Title } from \"../../../Components/title/js\";\nimport { BaseStructure } from \"../../base/js\";\n\nimport { propTypes } from \"../../utils/globalProptypes\";\n\nimport '../styles/index.scss';\n\nexport const Header = ({ marker, tag, flexDisplay }) => {\n    return (\n        <BaseStructure marker={ marker } tag={ tag } flexDisplay={ flexDisplay }>\n            <Title title={'Hello, I\\'m Sullivan Tobias.'} flexDisplay={'flex-xs-12'} />\n            <Button text={'Check my Portfolio'} link={'#about'} />\n        </BaseStructure>\n    )\n};\n\nHeader.propTypes = propTypes;","import PropTypes from 'prop-types';\n\nexport const propTypes = {\n    marker: PropTypes.string.isRequired,\n    tag: PropTypes.string.isRequired,\n    flexDisplay: PropTypes.string\n};","import React, { useEffect, useRef, useState } from \"react\";\n\nimport { BaseComponent } from \"../../base/js\";\n\nimport { propTypes } from \"./propTypes\";\n\nimport '../styles/index.scss';\n\n\nexport const Navigation = ({ navigationLinks, flexDisplay }) => {\n    const [isFixed, setIsFixed] = useState('');\n    const [currentSection, setCurrentSection] = useState(undefined);\n    const navRef = useRef();\n\n    useEffect(() => {\n        const navTop = navRef.current.offsetTop;\n        const root = document.querySelector('#root').classList;\n        const structures = document.querySelectorAll('section[id]');\n\n        window.addEventListener('scroll', () => {\n            const wTop = window.pageYOffset;\n\n            structures.forEach(section => {\n                if (wTop + 50 > section.offsetTop) {\n                    setCurrentSection(section)\n                }\n            });\n\n            if (wTop > navTop) {\n                root.add('fixedNavigation');\n                setIsFixed(' fixed')\n            } else {\n                root.remove('fixedNavigation');\n                setIsFixed('');\n            }\n        });\n    }, []);\n\n    const links = navigationLinks.map((link, index) =>\n        <a className={ currentSection && currentSection.id === link.href ? 'active' : '' }\n           key={ index } href={ `#${ link.href }` }>\n            <li>{ link.title }</li>\n        </a>);\n\n    return (\n        <BaseComponent flexDisplay={ `${ flexDisplay }${ isFixed }` }>\n            <ul className={ 'cmp-navigation flex-row flex-just-around-xs' } ref={ navRef }>\n                { links }\n            </ul>\n        </BaseComponent>\n    )\n};\n\nNavigation.propTypes = propTypes;\n","import PropTypes from 'prop-types';\n\nexport const propTypes = {\n    navigationLinks: PropTypes.arrayOf(\n        PropTypes.shape({\n            title: PropTypes.string.isRequired,\n            href: PropTypes.string.isRequired\n        }).isRequired\n    )\n};","import React, { useEffect, useState } from \"react\";\n\nimport { BaseComponent } from \"../../base/js\";\n\nimport { propTypes } from \"./propTypes\";\n\nimport '../styles/index.scss';\n\nexport const SkillBars = ({ flexDisplay, skills, isVisible }) => {\n    const [barClass, setBarClass] = useState('hidden');\n\n    useEffect(() => {\n        isVisible && setBarClass('');\n    }, [isVisible]);\n\n    return (\n        <BaseComponent flexDisplay={ flexDisplay }>\n            <div className={`cmp-skillBars ${barClass}`}>\n                { skills.map(skill =>\n                    <div\n                        className={ 'cmp-skillBars__wrapper' }\n                        key={ skill.type }\n\n                    >\n                        <div className={ 'cmp-skillBars__wrapper--type' }>{ skill.type }</div>\n                        <div className={ `cmp-skillBars__wrapper--bar ${ barClass }` }\n                             style={ { width: `${ skill.level }%` } }>\n                            <span className={ 'cmp-skillBars__wrapper--bar--percentage' }>{ skill.level }%</span>\n                        </div>\n                    </div>\n                ) }\n            </div>\n        </BaseComponent>\n    )\n};\n\nSkillBars.propTypes = propTypes;","import PropTypes from 'prop-types';\n\nexport const propTypes = {\n    isVisible: PropTypes.bool,\n    flexDisplay: PropTypes.string,\n    skills: PropTypes.arrayOf(Object)\n};","import React from \"react\";\n\nimport { BaseComponent } from \"../../base/js\";\n\nimport { propTypes } from \"./propTypes\";\n\nimport '../styles/index.scss';\n\nexport const Image = ({ flexDisplay, props }) => {\n    return (\n        <BaseComponent flexDisplay={ flexDisplay }>\n            <div className=\"cmp-image\">\n                <img alt={ props.alt } { ...props } />\n            </div>\n        </BaseComponent>\n    )\n};\n\nImage.propTypes = propTypes;","import PropTypes from 'prop-types';\n\nexport const propTypes = {\n    flexDisplay: PropTypes.string,\n};","import React from \"react\";\nimport Texts from '../texts';\n\nimport { BaseComponent } from \"../../base/js\";\n\nimport { propTypes } from \"./propTypes\";\n\nimport '../styles/index.scss';\n\n\nexport const Text = ({ textKey, text, link, flexDisplay, className }) => {\n    const txt = textKey ? Texts[textKey] : text;\n\n    return (\n        <BaseComponent flexDisplay={ flexDisplay }>\n            { link ?\n                <a href={ link } target={'_blank'} rel='noopener noreferrer'>\n                    <p className={ `cmp-text${ className ? ' ' + className : '' }` }>\n                        { txt }\n                    </p>\n                </a>\n                :\n                <p className={ `cmp-text${ className ? ' ' + className : '' }` }>\n                    { txt }\n                </p>\n            }\n\n        </BaseComponent>\n    )\n};\n\nText.propTypes = propTypes;","import PropTypes from 'prop-types';\n\nexport const propTypes = {\n    textKey: PropTypes.string,\n    text: PropTypes.string,\n};","import React, { useEffect, useState } from \"react\";\n\nimport { BaseComponent } from \"../../base/js\";\n\nimport { propTypes } from \"./propTypes\";\n\nimport '../styles/index.scss';\n\nexport const Container = ({ children, flexDisplay, className, withTransition, isVisible, typeTransition }) => {\n    const [containerClass, setContainerClass] = useState(typeTransition);\n\n    useEffect(() => {\n        isVisible && setContainerClass('');\n    }, [isVisible]);\n\n    const display = withTransition ? `cmp-container__withTransition` : 'cmp-container';\n\n    return (\n        <BaseComponent flexDisplay={ `${ flexDisplay ? flexDisplay : '' }${ className ? ' '+ className : '' }` }>\n            <div className={ `${ display }${ containerClass ? ' ' + containerClass : '' } flex-just-center-xs` }>\n                { children }\n            </div>\n        </BaseComponent>\n    )\n};\n\nContainer.propTypes = propTypes;\n","import PropTypes from 'prop-types';\n\nexport const propTypes = {\n    children: PropTypes.node,\n    flexDisplay: PropTypes.string,\n    className: PropTypes.string,\n    withTransition: PropTypes.bool,\n    isVisible: PropTypes.bool,\n    typeTransition: PropTypes.string,\n};","import React from \"react\";\n\nimport { BaseComponent } from \"../../base/js\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { propTypes } from \"./propTypes\";\n\nimport '../styles/index.scss';\n\nexport const TextIcon = ({ text, icon, flexDisplay, className }) => {\n    return (\n        <BaseComponent flexDisplay={ flexDisplay } className={ className }>\n            <div className={ 'cmp-text-icon' }>\n                <FontAwesomeIcon icon={ icon } className={ 'icon' }/>\n                { text && <p className=\"cmp-text\">\n                    { text }\n                </p> }\n            </div>\n        </BaseComponent>\n    )\n};\n\nTextIcon.propTypes = propTypes;","import PropTypes from 'prop-types';\n\nexport const propTypes = {\n    className: PropTypes.string,\n    flexDisplay: PropTypes.string,\n    text: PropTypes.string\n};","import React from \"react\";\n\nimport { BaseComponent } from \"../../base/js\";\n\nimport { propTypes } from \"./propTypes\";\n\nimport '../styles/index.scss';\n\nexport const Separator = ({ flexDisplay, className, width }) => {\n\n    return (\n        <BaseComponent flexDisplay={ flexDisplay } className={ className }>\n            <hr width={ width + '%' } className={ 'cmp-separator' }/>\n        </BaseComponent>\n    )\n};\n\nSeparator.propTypes = propTypes;","import PropTypes from 'prop-types';\n\nexport const propTypes = {\n    flexDisplay: PropTypes.string,\n    className: PropTypes.string,\n    width: PropTypes.number\n};","import React from \"react\";\nimport Avatar from '../../../images/avatar.png'\n\nimport TrackVisibility from \"react-on-screen\";\n\nimport { Title } from \"../../../Components/title/js\";\nimport { BaseStructure } from \"../../base/js\";\nimport { SkillBars } from \"../../../Components/skills-bars/js\";\nimport { Image } from \"../../../Components/image/js\";\nimport { Text } from \"../../../Components/text/js\";\nimport { Container } from \"../../../Components/container/js\";\nimport { TextIcon } from \"../../../Components/text-icon/js\";\nimport { Separator } from \"../../../Components/separator/js\";\n\nimport { faNodeJs } from '@fortawesome/free-brands-svg-icons';\nimport { propTypes } from \"../../utils/globalProptypes\";\n\nimport '../styles/index.scss';\n\nconst Skills = [\n    { type: \"HTML\", level: 85 },\n    { type: \"CSS\", level: 85 },\n    { type: \"JavaScript\", level: 80 },\n    { type: \"React\", level: 80 },\n    { type: \"Handlebars\", level: 80 },\n    { type: \"AEM\", level: 70 },\n    { type: \"GraphQl\", level: 70 },\n];\n\nexport const About = ({ marker, tag, flexDisplay }) => {\n    return (\n        <BaseStructure marker={ marker } tag={ tag } flexDisplay={ flexDisplay }>\n            <Title title={ 'About Me' } flexDisplay={ 'flex-xs-12' } underlined/>\n            <TrackVisibility partialVisibility once className={ 'flex-xs-12 flex-md-6 flex-just-center-xs' }>\n                <Container withTransition typeTransition={'scale'}\n                           className={ `about-header-container` }>\n                    <Image props={ { src: Avatar, alt: 'avatar' } }/>\n                    <Text textKey={ 'description' }/>\n                </Container>\n            </TrackVisibility>\n            <TrackVisibility partialVisibility once className={ 'flex-xs-12 flex-md-6' }>\n                <SkillBars skills={ Skills }/>\n            </TrackVisibility>\n            <Separator width={ 70 } flexDisplay={ 'flex-xs-12' }/>\n            <Title title={ 'WIP Technologies' } flexDisplay={ 'flex-xs-12' } tag={ 3 }/>\n            <TrackVisibility partialVisibility once className={'flex-xs-12'}>\n                <Container withTransition typeTransition={'leftToRight'}>\n                    <TextIcon icon={ faNodeJs } className={ 'flex-xs-6 nodeJS' }/>\n                </Container>\n            </TrackVisibility>\n        </BaseStructure>\n    )\n};\n\nAbout.propTypes = propTypes;","import React from \"react\";\n\nimport { BaseComponent } from \"../../base/js\";\nimport { Text } from \"../../text/js\";\n\nimport { propTypes } from \"./propTypes\";\n\nimport '../styles/index.scss';\n\nexport const Cards = ({ flexDisplay, card }) => {\n    const date = new Date(card.isoDate).toDateString();\n\n    return (\n        <BaseComponent flexDisplay={ flexDisplay }>\n            <div className=\"cmp-cards\">\n                <a target='_blank' href={ card.link } rel='noopener noreferrer'>\n                    <div className=\"card\">\n                        <div className=\"card_image\">\n                            <Text className={'title'} text={ card.title }/>\n                            <Text text={ date }/>\n                            { card.creator && <Text className={'author'} text={ card.creator }/> }\n                        </div>\n                    </div>\n                </a>\n            </div>\n        </BaseComponent>\n    )\n};\n\nCards.propTypes = propTypes;","import PropTypes from 'prop-types';\n\nexport const propTypes = {\n    flexDisplay: PropTypes.string,\n    card: PropTypes.object.isRequired\n};","import React, { useEffect, useState } from \"react\";\nimport RSSParser from 'rss-parser/dist/rss-parser.min';\n\nimport { BaseComponent } from \"../../base/js\";\nimport { Cards } from \"../../cards/js\";\n\nimport { propTypes } from \"./propTypes\";\n\nimport '../styles/index.scss';\n\nexport const RssFeed = ({ flexDisplay, url, maxDisplayed }) => {\n    const [feedList, setFeedList] = useState({});\n    const parser = new RSSParser();\n\n    const CORS_PROXY = \"https://cors-anywhere.herokuapp.com/\";\n\n    useEffect(() => {\n        parser.parseURL(CORS_PROXY + url).then(fd => {\n            return { items: fd.items.splice(0, maxDisplayed) }\n        })\n            .then(data => {\n                const feed = data.items.map((item, index) =>\n                    <li className={ 'flex-xs-12 flex-md-6 flux-item' } key={ index }>\n                        <Cards card={ item }/>\n                    </li>\n                );\n\n                setFeedList(feed);\n            })\n            .catch(err => {\n                throw err\n            });\n\n    }, []);\n\n    return (\n        <BaseComponent flexDisplay={ flexDisplay }>\n            <ul className={ 'cmp-flux flex-row' }>{ Object.keys(feedList).length && feedList } </ul>\n        </BaseComponent>\n    )\n};\n\nRssFeed.propTypes = propTypes;","import PropTypes from 'prop-types';\n\nexport const propTypes = {\n    flexDisplay: PropTypes.string,\n    url: PropTypes.string.isRequired,\n    maxDisplayed: PropTypes.number\n};","import React from \"react\";\n\nimport { Title } from \"../../../Components/title/js\";\nimport { BaseStructure } from \"../../base/js\";\nimport { RssFeed } from \"../../../Components/rss-feed/js\";\nimport { Text } from \"../../../Components/text/js\";\n\nimport { Tab, TabList, TabPanel, Tabs } from \"react-tabs\";\nimport { propTypes } from \"../../utils/globalProptypes\";\n\nimport '../styles/index.scss';\n\nexport const FluxRss = ({ marker, tag, flexDisplay }) => {\n\n    return (\n        <BaseStructure marker={ marker } tag={ tag } flexDisplay={ flexDisplay }>\n            <Title title={ 'Flux' } flexDisplay={ 'flex-xs-12' } underlined/>\n            <Text flexDisplay={ 'flex-xs-12' } text={ 'Interesting fluxes for me' } className={ 'information' }/>\n            <Tabs className={ 'flex-xs-12' } forceRenderTabPanel defaultIndex={ 1 }>\n                <TabList>\n                    <Tab className={ 'flex-xs-8 flex-md-3 flex-just-center-md' }> Codrops </Tab>\n                    <Tab className={ 'flex-xs-8 flex-md-3 flex-just-center-md' }> CSS-Tricks </Tab>\n                    <Tab className={ 'flex-xs-8 flex-md-3 flex-just-center-md' }> Reddit </Tab>\n                    <Tab className={ 'flex-xs-8 flex-md-3 flex-just-center-md' }> CodePen </Tab>\n                    <Tab className={ 'flex-xs-8 flex-md-3 flex-just-center-md' }> SO </Tab>\n                </TabList>\n                <TabPanel>\n                    <RssFeed\n                        maxDisplayed={ 4 }\n                        url={ 'https://tympanus.net/codrops/collective/feed/' }/>\n                </TabPanel>\n                <TabPanel>\n                    <RssFeed\n                        maxDisplayed={ 4 }\n                        url={ 'https://css-tricks.com/feed/' }/>\n                </TabPanel>\n                <TabPanel>\n                    <RssFeed\n                        maxDisplayed={ 4 }\n                        url={ 'https://www.reddit.com/r/programming/.rss' }/>\n                </TabPanel>\n                <TabPanel>\n                    <RssFeed\n                        maxDisplayed={ 4 }\n                        url={ 'https://blog.codepen.io/feed/' }/>\n                </TabPanel>\n                <TabPanel>\n                    <RssFeed\n                        maxDisplayed={ 4 }\n                        url={ 'https://stackoverflow.com/feeds/tag?tagnames=javascript&sort=newest' }/>\n                </TabPanel>\n            </Tabs>\n        </BaseStructure>\n    )\n};\n\nFluxRss.propTypes = propTypes;","import React, { useRef } from \"react\";\nimport Avatar from '../../../images/avatar.png'\n\nimport TrackVisibility from \"react-on-screen\";\n\nimport { BaseStructure } from \"../../base/js\";\nimport { Title } from \"../../../Components/title/js\";\nimport { Text } from \"../../../Components/text/js\";\nimport { Image } from \"../../../Components/image/js\";\nimport { Container } from \"../../../Components/container/js\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { faArrowAltCircleUp, faChevronCircleRight } from '@fortawesome/free-solid-svg-icons'\nimport { faLinkedinIn, faGoogle, faGithub } from '@fortawesome/free-brands-svg-icons'\nimport { propTypes } from \"../../utils/globalProptypes\";\n\nimport '../styles/index.scss';\nimport { Separator } from \"../../../Components/separator/js\";\n\nexport const Contact = ({ marker, tag, flexDisplay }) => {\n    const buttonRef = useRef();\n    const titleRef = useRef();\n    const navRef = useRef();\n\n    const handleClick = () => {\n        buttonRef.current.classList.toggle('active');\n        titleRef.current.classList.toggle('active');\n        navRef.current.classList.toggle('active');\n    };\n\n    const linksArray = [\n        {\n            href: \"https://www.linkedin.com/in/sullivan-tobias-340807157/\",\n            class: \"linkedIn\",\n            icon: faLinkedinIn,\n            text: \"See my profile\",\n            target: '_blank'\n        },\n        {\n            href: \"https://github.com/sullivantobias\",\n            class: \"github\",\n            icon: faGithub,\n            text: \"Check my repositories\",\n            target: '_blank'\n        },\n        {\n            href: \"mailto:sullytobias@gmail.com\",\n            class: \"gmail\",\n            icon: faGoogle,\n            text: \"Send me an email\"\n        }];\n\n    const links = linksArray.map((link, index) =>\n        <a key={ index } target={ link.target } href={ link.href } className={ link.class }>\n            <FontAwesomeIcon icon={ link.icon }/>\n            <Text text={ link.text }/>\n            <FontAwesomeIcon icon={ faChevronCircleRight }/>\n        </a>);\n\n    return (\n        <BaseStructure marker={ marker } tag={ tag } flexDisplay={ flexDisplay }>\n            <Title title={ 'More' } underlined className={ 'section-title flex-xs-12' }/>\n            <Text className={ 'mentions' } text={ 'Honorable Mentions' } flexDisplay={ 'flex-xs-12' }/>\n            <Container flexDisplay={ 'flex-xs-12' }>\n                <Text className={ 'screeps' } text={ 'Screeps' } link={ 'https://screeps.com/' }/>\n                <Text className={ 'terminal' } text={ 'Terminal' } link={ 'https://terminal.c1games.com/' }/>\n                <Text className={ 'hackerrank' } text={ 'HackerRank' } link={ 'https://www.hackerrank.com/' }/>\n                <Text className={ 'zachtronics' } text={ 'Zachtronics' } link={ 'http://www.zachtronics.com/' }/>\n            </Container>\n            <Separator flexDisplay={ \"flex-xs-12\" } width={ 80 }/>\n            <TrackVisibility partialVisibility once>\n                <Container withTransition typeTransition={ 'leftToRight' }>\n                    <div className=\"contact-area\">\n                        <div className=\"contact\">\n                            <section>\n                                <div className=\"content\">\n                                    <Image props={ {\n                                        src: Avatar,\n                                        alt: \"Profile Image\"\n                                    } }/>\n\n                                    <aside>\n                                        <Title title={ 'Sullivan Tobias' }/>\n                                        <Text textKey={ 'contact' }/>\n                                    </aside>\n\n                                    <button onClick={ handleClick } ref={ buttonRef }>\n                                        <span>Contact Me</span>\n                                        <FontAwesomeIcon icon={ faArrowAltCircleUp }/>\n                                    </button>\n                                </div>\n\n                                <div className=\"title\" ref={ titleRef }><p>Contact Me</p></div>\n                            </section>\n\n                            <nav ref={ navRef }>\n                                { links }\n                            </nav>\n                        </div>\n                    </div>\n                </Container>\n            </TrackVisibility>\n        </BaseStructure>\n    )\n};\n\nContact.propTypes = propTypes;","import React from \"react\";\n\nimport { BaseStructure } from \"../../base/js\";\nimport { Text } from \"../../../Components/text/js\";\n\nimport { propTypes } from \"../../utils/globalProptypes\";\n\nimport '../styles/index.scss';\n\nexport const Footer = ({ marker, tag, flexDisplay }) => {\n    return (\n        <BaseStructure marker={ marker } tag={ tag } flexDisplay={ flexDisplay }>\n            <Text flexDisplay={ \"flex-xs-12\" } textKey={ 'copyright' }/>\n        </BaseStructure>\n    )\n};\n\nFooter.propTypes = propTypes;","export const navigationLinks =\n    [\n        {\n            title: \"About me\",\n            href: \"about\"\n        },\n        {\n            title: \"Flux\",\n            href: \"flux-rss\"\n        },\n        {\n            title: \"More\",\n            href: \"more\"\n        }\n    ];","import React from 'react';\n\nimport { Header } from \"./Sections/header/js\";\nimport { Navigation } from \"./Components/navigation/js\";\nimport { About } from \"./Sections/about-me/js\";\nimport { FluxRss } from \"./Sections/flux-rss/js\";\nimport { Contact } from \"./Sections/contact/js\";\nimport { Footer } from \"./Sections/footer/js\";\nimport { navigationLinks } from \"./Utils/navigationLinks\";\n\nconst App = () => {\n\n    return (\n        <React.Fragment>\n            <Header marker={ 'header' } tag={ 'header' } flexDisplay={ 'flex-just-center-xs' }/>\n            <Navigation navigationLinks={ navigationLinks } flexDisplay={ 'container-fluid navigation' }/>\n            <About tag={ 'section' } marker={ 'about' }/>\n            <FluxRss tag={ 'section' } marker={ 'flux-rss' } flexDisplay={ 'flex-just-center-xs' }/>\n            <Contact tag={ 'section' } marker={ 'more' } flexDisplay={ 'flex-just-center-xs' }/>\n            <Footer tag={ 'footer' } marker={ 'footer' } flexDisplay={ 'flex-just-center-xs' }/>\n        </React.Fragment>\n    )\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './Commons/_global.scss';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}